{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","ChipStyles","useRef","margin","Math","random","useState","Text","setText","Container","Row","className","Button","color","onClick","style","current","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OA+BeA,MAxBf,WACI,IAAMC,EAAaC,iBAAO,CACtBC,OAAQ,GAAAC,KAAKC,SAAkB,KAKrC,EAAwBC,mBAAS,iBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,cAACC,EAAA,EAAD,UAEA,cAACC,EAAA,EAAD,CAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACM,uBACA,iCAAQ,6BAAKJ,MACd,cAACK,EAAA,EAAD,CAAQD,UAAU,YAAYE,MAAM,QAAQC,QAAS,WAAON,EAAQ,kBAApE,iBACA,cAACI,EAAA,EAAD,CAAQD,UAAU,YAAYE,MAAM,QAAQE,MAAOd,EAAWe,QAASF,QAAS,WAAOG,OAAOC,SAASC,QAAO,IAA9G,wBCXIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c7076dc.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { useState } from \"react\";\nimport React, { useRef } from 'react';\n\nfunction App() {\n    const ChipStyles = useRef({\n        margin: Math.random()*(100-50)+30,\n        \n        \n        \n    });\n  const [Text, setText] = useState(\"Are you dumb?\");\n  return (\n    <Container>\n        \n    <Row className=\"Row\">\n      <div className=\"frame\">\n            <h2></h2>\n            <center><h1>{Text}</h1></center>\n           <Button className=\" btn btn1\" color=\"light\" onClick={() => {setText(\"I knew it! :3\");}}>YES</Button> \n           <Button className=\" btn btn2\" color=\"light\" style={ChipStyles.current} onClick={() => {window.location.reload(true);}}>NO</Button>\n      </div>\n    </Row>\n    \n  </Container>\n  );\n \n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}